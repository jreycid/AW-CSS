/* centramos o texto dos títulos */
h2,
h3 {
    text-align: center;
}

.contenedor-flex {
    border: 1px solid black;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 700px;
}

    /* ---- PROPIEDADES DE ALINEACIÓN -----  

        3. align-items: alinea os elementos no eixe secundario.

            align-items: stretch;
            align-items: flex-start; 
            align-items: flex-end;
            align-items: center;
}

    * Controlar o espazo dentro dos elementos flex *

        Suponiendo que nuestro contenedor tiene más espacio del necesario para mostrar los elementos,
        los elementos se alinean al principio y no crecen para llenar el espacio.
        Dejan de crecer a su tamaño max-content. Esto se debe a que el valor inicial de las propiedades flex- es:

        Asumindo que o noso contenedor ten máis espazo do necesario para amosar os elementos,
        os elementos alíñanse ao principio e non medran ata encher o espazo.
        Deixan de crecer o acadar o seu tamaño max-content. Isto débese a que o valor inicial das propiedades flex é:

            flex-grow: 0 : os elementos non crecen.
            flex-shrink: 1 : os elementos poden encollerse máis pequenos que o seu flex-basis.
            flex-basis: auto : os elementos teñen un tamaño base de auto.

        Isto pode representarse mediante un valor de palabra clave de flex: initial.
        A notación abreviada flex, ou as notacións extendidas de flex-grow, flex-shrink e flex-basis aplícanse os elementos secundarios do contenedor flex.

    Para ejemplo de flex-shrink y flex-basis:
    https://developer.mozilla.org/es/docs/Web/CSS/flex-shrink
    
*/

.elemento-flex {
    padding: 10px;
    width: 100px;
    /* flex-grow: 1; todos crecen na mesma proporción ata ocupar o 100% do contenedor */
}

.elemento-flex:nth-child(1) {
    background-color: lightgray;
    /* order: 3; */
    /* align-self: flex-end; */
}

.elemento-flex:nth-child(2) {
    background-color: lightcoral;
    /* order: 1; */
    /* flex-grow: 4; */
}

.elemento-flex:nth-child(3) {
    background-color: lightgreen;
    /* order: -1;  */
    flex: 0 0 90%;
}

.elemento-flex:nth-child(4) {
    background-color: aquamarine;
}

.elemento-flex:nth-child(5) {
    background-color: cornflowerblue;
}

.elemento-flex:nth-child(6) {
    background-color: lightskyblue;
}

.elemento-flex:nth-child(7) {
    background-color: cornsilk;
}

.elemento-flex:nth-child(8) {
    background-color: darksalmon;
}

.elemento-flex:nth-child(9) {
    background-color: lightseagreen;
}